{
  "_args": [
    [
      {
        "raw": "usemin-cli",
        "scope": null,
        "escapedName": "usemin-cli",
        "name": "usemin-cli",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/gambit/out-of-system"
    ]
  ],
  "_from": "usemin-cli@latest",
  "_id": "usemin-cli@0.5.1",
  "_inCache": true,
  "_location": "/usemin-cli",
  "_nodeVersion": "7.7.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/usemin-cli-0.5.1.tgz_1490718843771_0.3463980311062187"
  },
  "_npmUser": {
    "name": "nelsyeung",
    "email": "nelsyeung@icloud.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {
    "cliui": "3.2.0",
    "decamelize": "1.2.0",
    "get-caller-file": "1.0.2",
    "os-locale": "1.4.0",
    "read-pkg-up": "1.0.1",
    "require-directory": "2.1.1",
    "require-main-filename": "1.0.1",
    "set-blocking": "2.0.0",
    "string-width": "1.0.2",
    "which-module": "1.0.0",
    "y18n": "3.2.1"
  },
  "_requested": {
    "raw": "usemin-cli",
    "scope": null,
    "escapedName": "usemin-cli",
    "name": "usemin-cli",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/usemin-cli/-/usemin-cli-0.5.1.tgz",
  "_shasum": "d3ffa4ecb9f97aa331760247e5200192802758a5",
  "_shrinkwrap": null,
  "_spec": "usemin-cli",
  "_where": "/Users/gambit/out-of-system",
  "author": {
    "name": "Nelson Yeung",
    "url": "http://nelsyeung.com"
  },
  "bin": {
    "usemin": "./bin/usemin"
  },
  "bugs": {
    "url": "https://github.com/nelsyeung/usemin-cli/issues"
  },
  "dependencies": {
    "usemin": "^0.4.3",
    "yargs": "^6.6.0"
  },
  "description": "Replaces references to non-optimized scripts or stylesheets into a set of HTML files (or any templates/views).",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "d3ffa4ecb9f97aa331760247e5200192802758a5",
    "tarball": "https://registry.npmjs.org/usemin-cli/-/usemin-cli-0.5.1.tgz"
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "mocha": true
    },
    "extends": "eslint:recommended",
    "rules": {
      "indent": [
        "error",
        "tab"
      ],
      "linebreak-style": [
        "error",
        "unix"
      ],
      "quotes": [
        "error",
        "single"
      ],
      "semi": [
        "error",
        "always"
      ],
      "comma-dangle": [
        "error",
        "always"
      ],
      "brace-style": [
        "error",
        "1tbs"
      ]
    }
  },
  "gitHead": "8517bd51ae7463f10c2b744a907cd13ed6594f05",
  "homepage": "https://github.com/nelsyeung/usemin-cli#readme",
  "keywords": [
    "usemin",
    "html",
    "css",
    "optimize"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "nelsyeung",
      "email": "nelsyeung@icloud.com"
    }
  ],
  "name": "usemin-cli",
  "optionalDependencies": {},
  "readme": "# usemin-cli [![Build Status](https://travis-ci.org/nelsyeung/usemin.svg?branch=master)](https://travis-ci.org/nelsyeung/usemin)\n\n> CLI version of usemin. For _purists_, those who doesn't use build tools like [Grunt](https://github.com/yeoman/grunt-usemin) and [Gulp](https://github.com/zont/gulp-usemin), but just use NPM as their build tool.\n\n## Getting started\n\nInstall with NPM:\n```\nnpm install usemin-cli\n```\n\n## API\n[usemin](https://github.com/nelsyeung/usemin) - API for this module.\n\n## Usage\n\n```\nusemin [input.html] [--dest|-d dir] [--output|-o output.html] [options]\n```\n### Example commands\n```\nusemin src/index.html --dest dist --output dist/index.html\nusemin src/index.html -d dist -o dist/index.html\nusemin src/index.html -d dist > dist/index.html\nusemin src/index.html -d dist -o dist/index.html --htmlmin true --rmlr true\nusemin src/index.html -d dist -o dist/index.html --htmlmin true -c config.js\n```\n\n### Available options\n```\n--htmlmin - Also minifies the input HTML file (Boolean)\n--rmlr, --removeLivereload - Remove livereload script (Boolean)\n--noprocess - Do not process files, just replace references (Boolean)\n-c, --config - Supply a configurations file for UglifyJS, CleanCSS and HTML minifier.\n--listblocks - Write blocks to stdout or filename.json.\n               E.g., --listblocks // print to stdout\n                     --listblocks blocks.json // write to blocks.json\n```\n\n### Example HTML\n#### Blocks\nBlocks are expressed as:\n```html\n<!-- build:<pipelineId>(alternate search path) <path> -->\n... HTML Markup, list of script / link tags.\n<!-- endbuild -->\n```\n\n- **pipelineId**: pipeline id for options or remove to remove a section\n- **alternate search path**: (optional) By default the input files are relative to the treated file. Alternate search path allows one to change that\n- **path**: the file path of the optimized file, the target output\n\n```html\n<!-- build:css css/main.js -->\n<link rel=\"stylesheet\" href=\"css/main.css\">\n<link rel=\"stylesheet\" href=\"css/modules.css\">\n<!-- endbuild -->\n\n<!-- build:js js/main.js -->\n<script src=\"js/app.js\"></script>\n<script src=\"js/controllers.js\"></script>\n<!-- endbuild -->\n\n<!-- build:js js/main.js -->\n<script defer async src=\"js/app.js\"></script>\n<script defer async src=\"js/controllers.js\"></script>\n<!-- endbuild -->\n\n<!-- build:remove -->\n<script src=\"js/app.js\"></script>\n<script src=\"js/controllers.js\"></script>\n<!-- endbuild -->\n\n<script>document.write('<script src=\"http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1\"></' + 'script>')</script>\n```\nRunning the command with `--rmlr true` will output:\n```\n<link rel=\"stylesheet\" href=\"css/main.js\">\n<script src=\"js/main.js\"></script>\n<script defer async src=\"js/main.js\"></script>\n```\n\n#### Alternate search path\n```html\n<!-- build:js(js) js/main.js -->\n<script defer async src=\"app.js\"></script>\n<script defer async src=\"controllers.js\"></script>\n<!-- endbuild -->\n\n<!-- build:js(js,.tmp) js/main.js -->\n<script defer async src=\"app.js\"></script>\n<script defer async src=\"controllers.js\"></script>\n<!-- endbuild -->\n```\n\n### Config file\n\nPlease check the relevant documentations for the available options: [ UglifyJS](https://github.com/mishoo/UglifyJS2), [CleanCSS](https://github.com/jakubpawlowicz/clean-css) and [HTML minifier](https://github.com/kangax/html-minifier).\n\n```JavaScript\nmodule.exports = {\n\tuglifyjs: {\n\t\t// ... UglifyJS API options\n\t},\n\tcleancss: {\n\t\t// ... CleanCSS API options\n\t},\n\thtmlminifier: {\n\t\t// ... HTML minifier API options\n\t}\n}\n```\n\n## License\n\n[MIT license](http://opensource.org/licenses/MIT.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nelsyeung/usemin-cli.git"
  },
  "scripts": {
    "test": "eslint . && mocha"
  },
  "version": "0.5.1"
}
